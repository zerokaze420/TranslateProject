name: Check Article Validity

on:
  pull_request:
    branches:
      - master
    paths:
      # 确保只有 sources/ 目录下的 .md 文件发生变化时才触发
      - 'sources/**.md'

jobs:
  check-article:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for accurate diffing
          fetch-depth: 0 
          
      - name: Install yq
        # 安装 yq，它是处理 YAML front matter 的关键工具
        run: sudo snap install yq
          
      - name: Get Diff
        id: git-diff-action
        # 获取 PR 中更改的文件列表，并输出到 diff.json
        uses: GrantBirki/git-diff-action@v2.7.0
        with:
          json_diff_file_output: diff.json
          file_output_only: true
          
      - name: Run Article Checks
        # 将环境变量（Diff 文件路径和 PR 开启者 ID）传递给脚本
        env:
          DIFF_JSON: ${{ steps.git-diff-action.outputs.json-diff-path }}
          ACTOR_ID: ${{ github.actor }}
          
        run: |
          #!/bin/bash
          
          # 遇到任何错误立即退出
          set -e 
          
          # 定义一个辅助函数，用于从文件的 YAML front matter 中提取值
          # 替代原脚本中的 'yq -f extract'
          yq_extract() {
            local KEY="$1"
            local FILE="$2"
            # 使用 yq 命令提取值。
            # sed 用于去除 yq 输出中可能带有的引号。
            yq e ".$KEY" "$FILE" | sed 's/^"//;s/"$//'
          }
          

          
          # 检查文件名格式是否有效（仅小写字母、数字和连字符）
          check_filename_format() {
            local ARTICLE_PATH="$1"
            FILENAME=$(basename "$ARTICLE_PATH" .md)
            if [[ ! "$FILENAME" =~ ^[a-z0-9]+(-[a-z0-9]+)*$ ]]; then
              ERROR=$ERROR"Invalid filename format. Filename should only contain lowercase letters, numbers, and hyphens; "
            fi
          }
          
          # 检查 published_date 和 publisher
          check_published() {
            local PUBLISHED_ARTICLE="$1"
            PUBLISHER=$(yq_extract 'publisher' $PUBLISHED_ARTICLE)
            PUBLISHED_DATE=$(yq_extract 'published_date' $PUBLISHED_ARTICLE)
            
            if [ "$PUBLISHER" == "null" ] || [ "$PUBLISHED_DATE" == "null" ]; then
              ERROR=$ERROR"Missing metadata in publisher/published_date; "
            fi
          }
          
          # 检查 proofread_date
          check_proofread() {
            local PROOFREAD_ARTICLE="$1"
            PROOFREAD_DATE=$(yq_extract 'proofread_date' $PROOFREAD_ARTICLE)
            
            if [ "$PROOFREAD_DATE" == "null" ]; then
              ERROR=$ERROR"Missing metadata in proofread_date; "
            else
              # 检查 proofread_date 是否早于 published_date
              PUBLISHED_DATE=$(yq_extract 'published_date' $PROOFREAD_ARTICLE)
              if [ ! "$PUBLISHED_DATE" == "null" ] && [ "$PUBLISHED_DATE" -lt "$PROOFREAD_DATE" ]; then
                ERROR=$ERROR"Published date is earlier than proofread date; "
              fi
            fi
          }
          
          # 检查 proofreader
          check_proofreading() {
            local PROOFREADING_ARTICLE="$1"
            PROOFREADER=$(yq_extract 'proofreader' $PROOFREADING_ARTICLE)
            
            if [ "$PROOFREADER" == "null" ]; then
              ERROR=$ERROR"Missing metadata in proofreader; "
            else
              if [ "$STATUS" == "proofreading" ] || [ "$STATUS" == "proofread" ]; then
                if [ "$PROOFREADER" != "$ACTOR_ID" ]; then
                  ERROR=$ERROR"Proofreader is not the same as the PR opener; "
                fi
              fi
            fi
          }
          
          # 检查 translated_date
          check_translated() {
            local TRANSLATED_ARTICLE="$1"
            TRANSLATED_DATE=$(yq_extract 'translated_date' $TRANSLATED_ARTICLE)
            
            if [ "$TRANSLATED_DATE" == "null" ]; then
              ERROR=$ERROR"Missing metadata in translated_date; "
            else
              # 检查 translated_date 是否早于 proofread_date
              PROOFREAD_DATE=$(yq_extract 'proofread_date' $TRANSLATED_ARTICLE)
              if [ ! "$PROOFREAD_DATE" == "null" ] && [ "$PROOFREAD_DATE" -lt "$TRANSLATED_DATE" ]; then
                ERROR=$ERROR"Proofread date is earlier than translated date; "
              fi
            fi
          }
          
          # 检查 translator
          check_translating() {
            local TRANSLATING_ARTICLE="$1"
            TRANSLATOR=$(yq_extract 'translator' $TRANSLATING_ARTICLE)
            TRANSLATING_DATE=$(yq_extract 'translating_date' $TRANSLATING_ARTICLE)
            
            if [ "$TRANSLATOR" == "null" ]; then
              ERROR=$ERROR"Missing metadata in translator; "
            else
              if [ "$STATUS" == "translating" ] || [ "$STATUS" == "translated" ]; then
                COLLECTED_DATE=$(yq_extract 'collected_date' $TRANSLATING_ARTICLE)
                if [ ! "$TRANSLATING_DATE" == "null" ] && [ "$TRANSLATING_DATE" -lt "$COLLECTED_DATE" ]; then
                  ERROR=$ERROR"Translating date is earlier than collected date;"
                elif [ "$TRANSLATOR" != "$ACTOR_ID" ]; then
                  ERROR=$ERROR"Translator is not the same as the PR opener; "
                fi
              fi
            fi
          }
          
          # 检查收集阶段的元数据
          check_collected() {
            local COLLECTED_ARTICLE="$1"
            TITLE=$(yq_extract 'title' $COLLECTED_ARTICLE)
            AUTHOR=$(yq_extract 'author' $COLLECTED_ARTICLE)
            COLLECTOR=$(yq_extract 'collector' $COLLECTED_ARTICLE)
            COLLECTED_DATE=$(yq_extract 'collected_date' $COLLECTED_ARTICLE)
            LINK=$(yq_extract 'link' $COLLECTED_ARTICLE)
            
            if [ "$TITLE" == "null" ] || [ "$AUTHOR" == "null" ] || [ "$COLLECTOR" == "null" ] || [ "$COLLECTED_DATE" == "null" ] || [ "$LINK" == "null" ]; then
              ERROR=$ERROR"Missing metadata in title/author/collector/collected_date/link; "
            else
              # 检查 collected_date 是否早于 translated_date
              TRANSLATED_DATE=$(yq_extract 'translated_date' $COLLECTED_ARTICLE)
              if [ ! "$TRANSLATED_DATE" == "null" ] && [ "$TRANSLATED_DATE" -lt "$COLLECTED_DATE" ]; then
                ERROR=$ERROR"Translated date is earlier than collected date; "
              fi
              if [ "$STATUS" == "collected" ]; then
                if [ "$COLLECTOR" != "$ACTOR_ID" ]; then
                  ERROR=$ERROR"Collector is not the same as the PR opener; "
                fi
              fi
            fi
          }
          
          CHECK_PASSED=1 # To check if all the articles pass
          echo $DIFF_JSON
          
          for ARTICLE in $FILES; do
            echo "Checking article: $ARTICLE"
            ERROR=""
            # Add the new filename format check
            check_filename_format $ARTICLE
          
            STATUS=$(yq_extract 'status' $ARTICLE)
            
            case $STATUS in
              "published")
                check_published $ARTICLE
                ;& # Fallthrough to ensure low stage checks will run on articles in higher stages
              "proofread")
                check_proofread $ARTICLE
                ;&
              "proofreading")
                check_proofreading $ARTICLE
                ;&
              "translated")
                check_translated $ARTICLE
                ;&
              "translating")
                check_translating $ARTICLE
                ;&
              "collected")
                check_collected $ARTICLE
                ;;
              *)
                ERROR=$ERROR"Invalid status: $STATUS"
                ;;
            esac
            
            # Printlog for each article
            if [ -z "$ERROR" ]; then
              echo "  ✨ All checks passed for $STATUS $ARTICLE"
            else
              echo "  😭 Some checks failed for $STATUS $ARTICLE: $ERROR"
              CHECK_PASSED=0
            fi
          done
          
          # Print overall result
          if [ $CHECK_PASSED -eq 0 ]; then
            echo "❌ Some checks failed. Please fix the article(s) before merging the PR."
            exit 1
          else
            echo "✅ All checks passed. You can merge the PR now."
            exit 0
          fi
